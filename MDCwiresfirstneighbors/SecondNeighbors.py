# second neighbors
print('\n\n\n\n', 'Making Array of the Second Neighbors...', '\n\n')

import dgl
import numpy as np

#########################################################
# import the edges generated by FirstNeighbors.py
edge_index = np.load('/hpcfs/bes/mlgpu/hoseinkk/MLTracking/bhabha/GNN/MDCwiresfirstneighbors/share/edge_index.npy')

# find neighbors of the neighbors
secondneighbors = []
for j in range(0, 6796):
    edge_index1st = edge_index[np.where(edge_index == j)[0]]
    for i in range(edge_index1st.shape[0]):
        if np.where(edge_index == j)[1][i]:
            asecondneighbor = edge_index1st[i][0]
        else:
            asecondneighbor = edge_index1st[i][1]

        edge_index2nd = edge_index[np.where(edge_index == asecondneighbor)[0]]
        for k in range(edge_index2nd.shape[0]):
            if np.where(edge_index == asecondneighbor)[1][k]:
                secondneighbors.append([asecondneighbor, edge_index2nd[k][0]])
            else:
                secondneighbors.append([asecondneighbor, edge_index2nd[k][1]])

np.save('/hpcfs/bes/mlgpu/hoseinkk/MLTracking/bhabha/GNN/MDCwiresfirstneighbors/share/secondneighbors.npy', secondneighbors)
